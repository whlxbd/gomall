syntax="proto3";

package auth;

option go_package="/auth";

service AuthService {
    rpc DeliverTokenByRPC(DeliverTokenReq) returns (DeliveryResp) {}
    rpc VerifyTokenByRPC(VerifyTokenReq) returns (VerifyResp) {}
    rpc GetPayload(GetPayloadReq) returns (GetPayloadResp) {}

    rpc CheckPermission(CheckPermissionReq) returns (CheckPermissionResp) {}
    rpc CheckWhite(CheckWhiteReq) returns (CheckWhiteResp) {}
    rpc LoadPolicy(LoadPolicyReq) returns (LoadPolicyResp) {}
    rpc RemovePolicy(RemovePolicyReq) returns (RemovePolicyResp) {}
}

message DeliverTokenReq {
    int32  user_id= 1;
}

message VerifyTokenReq {
    string token = 1;
}

message DeliveryResp {
    string token = 1;
}

message VerifyResp {
    bool res = 1;
}

message GetPayloadReq {
    string token = 1;
}

message GetPayloadResp {
    int32 user_id = 1;
    string type = 2;
}

message CheckPermissionReq {
    string role = 1;
    string router = 2;
}

message CheckPermissionResp {
    bool ok = 1;
}

message CheckWhiteReq {
    string router = 1;
}

message CheckWhiteResp {
    bool ok = 1;
}

message LoadPolicyReq {
    string role = 1;
    string router = 2;
}

message LoadPolicyResp {}

message RemovePolicyReq {
    string role = 1;
    string router = 2;
}

message RemovePolicyResp {}